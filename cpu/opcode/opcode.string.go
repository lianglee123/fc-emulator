// Code generated by "stringer -type=Code -output opcode.string.go"; DO NOT EDIT.

package opcode

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[ADC-0]
	_ = x[AND-1]
	_ = x[ASL-2]
	_ = x[BCC-3]
	_ = x[BCS-4]
	_ = x[BEQ-5]
	_ = x[BIT-6]
	_ = x[BMI-7]
	_ = x[BNE-8]
	_ = x[BPL-9]
	_ = x[BRK-10]
	_ = x[BVC-11]
	_ = x[BVS-12]
	_ = x[CLC-13]
	_ = x[CLD-14]
	_ = x[CLI-15]
	_ = x[CLV-16]
	_ = x[CMP-17]
	_ = x[CPX-18]
	_ = x[CPY-19]
	_ = x[DEC-20]
	_ = x[DEX-21]
	_ = x[DEY-22]
	_ = x[EOR-23]
	_ = x[INC-24]
	_ = x[INX-25]
	_ = x[INY-26]
	_ = x[JMP-27]
	_ = x[JSR-28]
	_ = x[LDA-29]
	_ = x[LDX-30]
	_ = x[LDY-31]
	_ = x[LSR-32]
	_ = x[NOP-33]
	_ = x[ORA-34]
	_ = x[PHA-35]
	_ = x[PHP-36]
	_ = x[PLA-37]
	_ = x[PLP-38]
	_ = x[ROL-39]
	_ = x[ROR-40]
	_ = x[RTI-41]
	_ = x[RTS-42]
	_ = x[SBC-43]
	_ = x[SEC-44]
	_ = x[SED-45]
	_ = x[SEI-46]
	_ = x[STA-47]
	_ = x[STX-48]
	_ = x[STY-49]
	_ = x[TAX-50]
	_ = x[TAY-51]
	_ = x[TSX-52]
	_ = x[TXA-53]
	_ = x[TXS-54]
	_ = x[TYA-55]
	_ = x[DCP-56]
	_ = x[ISC-57]
	_ = x[LAX-58]
	_ = x[RLA-59]
	_ = x[RRA-60]
	_ = x[SAX-61]
	_ = x[SLO-62]
	_ = x[SRE-63]
	_ = x[INVALID-64]
}

const _Code_name = "ADCANDASLBCCBCSBEQBITBMIBNEBPLBRKBVCBVSCLCCLDCLICLVCMPCPXCPYDECDEXDEYEORINCINXINYJMPJSRLDALDXLDYLSRNOPORAPHAPHPPLAPLPROLRORRTIRTSSBCSECSEDSEISTASTXSTYTAXTAYTSXTXATXSTYADCPISCLAXRLARRASAXSLOSREINVALID"

var _Code_index = [...]uint8{0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30, 33, 36, 39, 42, 45, 48, 51, 54, 57, 60, 63, 66, 69, 72, 75, 78, 81, 84, 87, 90, 93, 96, 99, 102, 105, 108, 111, 114, 117, 120, 123, 126, 129, 132, 135, 138, 141, 144, 147, 150, 153, 156, 159, 162, 165, 168, 171, 174, 177, 180, 183, 186, 189, 192, 199}

func (i Code) String() string {
	if i < 0 || i >= Code(len(_Code_index)-1) {
		return "Code(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Code_name[_Code_index[i]:_Code_index[i+1]]
}
